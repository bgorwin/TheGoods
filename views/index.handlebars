<!-- Uses a transparent header that draws on top of the layout's background  -->
<div class="demo-layout-transparent mdl-layout mdl-layout--fixed-header">
    <header class="mdl-layout__header mdl-layout__header--transparent">
        <div class="mdl-layout__header-row ">
            <!-- Title -->
            <span class="mdl-layout-title">THE GOOD$</span>
            <!-- Add spacer, to align navigation to the right -->
            <div class="mdl-layout-spacer"></div>
            <!-- Navigation -->
            <!-- <nav class="mdl-navigation"> -->
            <a class="mdl-navigation__link" id="search" href="/"><i class="material-icons">search</i></a>
            <a class="mdl-navigation__link" id="homeButton" href="/itemMmgt"><i class="material-icons">home</i></a>
            <a class="mdl-navigation__link" id="createItem" href="/newItem"><i class="material-icons">create</i></a>
            <a class="mdl-navigation__link" id="rentedItem" href="/rentedItems"><i class="material-icons">description</i></a>
            <form action="/logout" method="GET">
                <!-- <input > -->
                <a class="mdl-navigation__link" id="logout" href="Logout" type="submit" value="Logout"><i class="material-icons">power_settings_new</i></a>
            </form>
            <!-- </nav> -->
        </div>
    </header>
    <!-- <main class="mdl-layout__content">
  </main> -->
</div>
<!--*************** The item cards section ***********************-->

<div class="mapCardsBox">
    <div class="mdl-grid searchField">
        <div class="containerIndex mdl-cell mdl-cell--4-col">
            <form action="/search" method="GET" id="searchBar" data=>
                <div class="mdl-textfield mdl-js-textfield mdl-textfield--floating-label">
                    <input class="mdl-textfield__input" type="text" id="sample3" name="searchInput">
                    <label class="mdl-textfield__label" for="sample3">Search For An Item</label>
                </div>
            </form>
        </div>
        <div class="mdl-layout-spacer"></div>
    </div>
    <div class="mdl-grid">
        <div class="mdl-cell mdl-cell--4-col">
            {{#each cards}}
            <div style="opacity: 1">
              <div class="demo-card-square mdl-card mdl-shadow--2dp">

                <div class="mdl-card__title mdl-card--expand" style="background-image: url('{{this.itemPhoto}}'); background-size: cover;">
                    <h2 class="mdl-card__title-text">{{this.itemName}}</h2>
                </div>
              </div>
                <div class="mdl-card__supporting-text">
                    <p>
                        {{this.description}}
                        <br> {{this.location}}
                        <br> Price: ${{this.price}}
                    </p>
                </div>
                <div class="mdl-card__actions mdl-card--border">

                    <form id="form1" action="/{{this.id}}" method="GET"></form>
                    <button class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent" type="submit" form="form1">Rent</button>
                </div>
            </div>
            {{/each}}
        </div>
        <div class="mdl-cell mdl-cell--8-col">
            <div id="map"></div>
        </div>
    </div>
    <!-- <script src="/js/maps.js"></script> -->
    <script>
    console.log("Maps is connected");

            var map;
            var pos;
            var infowindow;
            var infoWindowUser;
            var interval;
            var GeoMarker;
            var austin;

             var address = [];
             var i = 0;
            {{#each cards}}
            
              address.push("{{this.location}}");
              address[i] = address[i].replace(/\,/g,"");
              i++;

            {{/each}}

            var initMap = function() {

                var austin = {
                    lat: 30.2672,
                    lng: -97.7431
                };

                map = new google.maps.Map(document.getElementById('map'), {
                    center: austin,
                    scrollwheel: false,
                    zoom: 11,
                    mapTypeId: "roadmap"
                });

                infowindow = new google.maps.InfoWindow();
                // infoWindowUser = new google.maps.InfoWindow();

                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                        pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude
                        };

                        var marker = new google.maps.Marker({
                            map: map,
                            icon: './assets/images/blueDot.png',
                            position: pos
                        });

                        map.setCenter(pos);

                        // var geocoder = new google.maps.Geocoder();

                        geocodeAddress(map);

                    }, function() {
                        handleLocationError(true, infoWindowUser, map.getCenter());
                    });
                } else {
                    // Browser doesn't support Geolocation
                    handleLocationError(false, infoWindowUser, map.getCenter());
                }

                function handleLocationError(browserHasGeolocation, infoWindow, pos) {
                    // infoWindowUser.setPosition(pos);
                    infoWindowUser.setContent(browserHasGeolocation ?
                        'Error: The Geolocation service failed.' :
                        'Error: Your browser doesn\'t support geolocation.');
                    infoWindowUser.open(map);
                    console.log("I just blocked this");
                }
            };

            var destination;

           

            // function geocodeAddress(geocoder, resultsMap) {
            //   var address = "6001 Shepherd Mountain Cove, Austin, TX";
            //   // var address = document.getElementById('address').value;
            //
            //   geocoder.geocode({
            //     'address': address
            //   }, function(results, status) {
            //     if (status === 'OK') {
            //       // resultsMap.setCenter(results[0].geometry.location);
            //       for (var i = 0; i < results.length; i++) {
            //         var marker = new google.maps.Marker({
            //           map: resultsMap,
            //           position: results[i].geometry.location
            //         });
            //       }
            //       // destination = results[0].geometry.location;
            //     } else {
            //       alert('Geocode was not successful for the following reason: ' + status);
            //     }
            //   });
            // }
           

            // console.log("Addresses: " + address);

            function geocodeAddress(resultsMap) {
                var geocoder = new google.maps.Geocoder();

                
                for (var i = 0; i < address.length; i++) {
                    geocoder.geocode({
                        'address': address[i]
                    }, function(results, status) {
                        if (status === 'OK') {
                            var marker = new google.maps.Marker({
                                map: resultsMap,
                                position: results[0].geometry.location

                            });


                            google.maps.event.addListener(marker, 'click', function() {
                              var j=0;
                                var contentString = address[j];
                                console.log("address: "+ address[j]);
                                j++;
                                // var contentString = '<div id="iw-container">' +
                                //                   '<div class="iw-title">' + place.name + '</div>' +
                                //                     '<div class="iw-content">' +
                                //                       '<div id="open">' + isOpen + '</div>' +
                                //                       '<div id="rating">' + "Rating: " + place.rating + '</div>' +
                                //                       '<img id="image" src="' + place.photos[0].getUrl({'maxWidth': 75, 'maxHeight': 75}) + '"><br>' +
                                //                       '<button id="directions" onclick="getDirections()">' + "Directions" + '</button>' +
                                //                     '</div>' +
                                //                   '</div>' +
                                //                 '</div>';
                                destination = results[0].geometry.location;
                                infowindow.setContent(contentString);
                                infowindow.open(map, this);
                            });
                        } else {
                            alert('Geocode was not successful for the following reason: ' + status);
                        }

                    });
                    
                }
            }




            // Function that creates the Google Maps Marker
            var id = 0;
            // var destination;
            var placeLoc;
            var isOpen;

            var travelMode = 'DRIVING';

            function getDirections() {
                // $("#textDirections").show();
                // $("#textDirections").css("width", "40%");
                // $("#map").css("width", "60%");
                var directionsService = new google.maps.DirectionsService;
                var directionsDisplay = new google.maps.DirectionsRenderer;
                var map = new google.maps.Map(document.getElementById('map'), {
                    zoom: 12,
                    center: {
                        lat: 30.2672,
                        lng: -97.7431
                    }
                });
                // $("#floating-panel").show();
                directionsDisplay.setMap(map);
                directionsDisplay.setPanel(document.getElementById('textDirections'));
                var control = document.getElementById("floating-panel");
                control.style.display = "block";
                map.controls[google.maps.ControlPosition.TOP_CENTER].push(control);
                document.getElementById('mode').addEventListener('change', function() {
                    travelMode = $('#mode').val();
                    calculateAndDisplayRoute(directionsService, directionsDisplay);
                });

                calculateAndDisplayRoute(directionsService, directionsDisplay);
            }

            function calculateAndDisplayRoute(directionsService, directionsDisplay) {
                directionsService.route({
                    origin: pos,
                    destination: destination,
                    travelMode: travelMode,
                    // travelMode: 'DRIVING',
                    provideRouteAlternatives: true
                }, function(response, status) {
                    if (status === 'OK') {
                        directionsDisplay.setDirections(response);
                    } else {
                        window.alert('Directions request failed due to ' + status);
                    }
                });
            }
    </script>
<!-- Google Maps API -->
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCso6Vq7SjQE7HWO1X1RhYVcGlEdvpYctE&callback=initMap"></script>
</div>
